{
  "hash": "06d08d9face6c81fc61ebc57577d1db4",
  "result": {
    "markdown": "---\ntitle: \"fitzRoy v1.4.0 on CRAN\"\nauthor: \"James Day\"\ndate: \"2024-06-07\"\nexecute:\n  error: TRUE\n---\n\n\nI'm pleased to announce that `fitzRoy` v1.4.0 has just been accepted to CRAN!\n\nThis update mostly contains bug fixes. You can read about them below.\n\n## New Features\n\n### Squiggle API is now more flexible\n\nThe function to call the Squiggle API is now more flexible and should allow for any new queries that are added to the Squiggle API to be used. Previously many of the queries and optional arguments were hardcode but these are now simply sent to the API as is, and the API will return data accordingly. You can read about the API [here](https://api.squiggle.com.au/) and provide any of the main \"query\" types to the first argument, with additional optional parameters being named arguments you can supply.\n\nAs a general rule\n\n-   Invalid query types will return an error\n\n-   Invalid optional argument types will be ignored and API data returned based on other arguments\n\n-   Optional arguments with nonsensical values will generally return an empty data frame\n\nPreviously all of these situations returned an unhelpful error.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_a218fcbbd837c7d31d840f2f5a26a699'}\n\n```{.r .cell-code}\n# Return a list of the sources, with ID's\nfitzRoy::fetch_squiggle_data(\"sources\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Getting data from https://api.squiggle.com.au?q=sources&format=JSON\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Getting data from https://api.squiggle.com.au?q=sources&format=JSON [1.3s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 4\n   name            icon                                                 id url  \n   <chr>           <chr>                                             <int> <chr>\n 1 Squiggle        \"/wp-content/themes/squiggle/assets/images/Squig…     1 \"htt…\n 2 The Arc         \"/wp-content/themes/squiggle/assets/images/TheAr…     2 \"htt…\n 3 Figuring Footy  \"/wp-content/themes/squiggle/assets/images/Figur…     3 \"htt…\n 4 Matter of Stats \"/wp-content/themes/squiggle/assets/images/MoS.p…     4 \"htt…\n 5 Punters         \"\"                                                    5 \"\"   \n 6 FMI             \"/wp-content/themes/squiggle/assets/images/FMI.p…     6 \"htt…\n 7 PlusSixOne      \"/wp-content/themes/squiggle/assets/images/p61.p…     7 \"htt…\n 8 Aggregate       \"\"                                                    8 \"/in…\n 9 Graft           \"/wp-content/themes/squiggle/assets/images/Graft…     9 \"htt…\n10 Stattraction    \"/wp-content/themes/squiggle/assets/images/statt…    10 \"htt…\n# … with 28 more rows\n```\n:::\n\n```{.r .cell-code}\n# Provide an incorrect query\nfitzRoy::fetch_squiggle_data(query = \"fitzRoy\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Getting data from https://api.squiggle.com.au?q=fitzRoy&format=JSON\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in `fitzRoy::fetch_squiggle_data()`:\n! API did not return any data\nℹ Did you check that the queries provided are valid?\n✖ You've supplied the following queries: \"q\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✖ Getting data from https://api.squiggle.com.au?q=fitzRoy&format=JSON [447ms]\n```\n:::\n\n```{.r .cell-code}\n# Provide an invalid optional argument\nfitzRoy::fetch_squiggle_data(query = \"tips\", fitzRoy = TRUE, source = 1, year = 2024)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Getting data from https://api.squiggle.com.au?q=tips&fitzRoy=TRUE&source=1&ye…\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Getting data from https://api.squiggle.com.au?q=tips&fitzRoy=TRUE&source=1&ye…\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 207 × 21\n   date    margin tipte…¹ tip   confi…² round gameid hmargin ateam ateamid bits \n   <chr>   <chr>    <int> <chr> <chr>   <int>  <int> <chr>   <chr>   <int> <chr>\n 1 2024-0… 12.52        2 Bris… 63.05       0  35701 12.52   Carl…       3 -0.4…\n 2 2024-0… 5.90         8 Gold… 55.92       0  35702 5.90    Rich…      14 0.16…\n 3 2024-0… 9.12         9 Grea… 59.36       0  35703 9.12    Coll…       4 0.24…\n 4 2024-0… 2.34        11 Melb… 52.27       0  35700 -2.34   Melb…      11 -0.0…\n 5 2024-0… 0.01         3 Carl… 50.01       1  35704 0.01    Rich…      14 0.00…\n 6 2024-0… 8.44         4 Coll… 58.62       1  35705 8.44    Sydn…      16 -0.2…\n 7 2024-0… 0.01         5 Esse… 50.01       1  35706 0.01    Hawt…      10 0.00…\n 8 2024-0… 7.08         2 Bris… 57.16       1  35712 -7.08   Bris…       2 -0.2…\n 9 2024-0… 19.85        7 Geel… 70.65       1  35708 19.85   St K…      15 0.49…\n10 2024-0… 0.01         1 Adel… 50.01       1  35709 -0.01   Adel…       1 -0.0…\n# … with 197 more rows, 10 more variables: hconfidence <chr>, correct <int>,\n#   sourceid <int>, venue <chr>, hteam <chr>, hteamid <int>, year <int>,\n#   updated <chr>, err <chr>, source <chr>, and abbreviated variable names\n#   ¹​tipteamid, ²​confidence\n```\n:::\n\n```{.r .cell-code}\n# Provide an incorrect optional argument value\nfitzRoy::fetch_squiggle_data(query = \"tips\", fitzRoy = TRUE, source = 1, year = 2030)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Getting data from https://api.squiggle.com.au?q=tips&fitzRoy=TRUE&source=1&ye…\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Getting data from https://api.squiggle.com.au?q=tips&fitzRoy=TRUE&source=1&ye…\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 0\n```\n:::\n:::\n\n\n### `replace_teams` now handle indigenous names\n\nWith teams starting to use indigenous names during Sir Doug Nicholls rounds, the AFL API was returning these names over the traditional team names, which was causing errors in places. Most people were handling this in their own code, or using teamIds, but where the package was using `replace_names` function, we've added a check to ensure we can match the indigenous and traditional name together.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_71d7e64d3b53010703b58d7af0a22487'}\n\n```{.r .cell-code}\nfitzRoy::replace_teams(\"Narrm\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Melbourne\"\n```\n:::\n\n```{.r .cell-code}\nfitzRoy::replace_teams(\"Walyalup\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Fremantle\"\n```\n:::\n:::\n\n\n## Bug Fixes\n\n-   Handle \"Opening Round\" fixtures for a bunch of functions that were breaking\n\n-   Fixed a bug where `fetch_player_details` was failing for certain teams\n\n-   Handled situations where an 'unused sub' was causing issues on various Footywire functions\n\n-   Removed some failing tests that were overkill\n\nEnjoy!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}