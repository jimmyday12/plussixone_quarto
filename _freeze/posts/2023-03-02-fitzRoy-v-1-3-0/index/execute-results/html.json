{
  "hash": "9db14a4c41b5d2a9340c1d64eb0967d7",
  "result": {
    "markdown": "---\ntitle: \"fitzRoy v1.3.0 on CRAN\"\nauthor: \"James Day\"\ndate: \"2023-03-02\"\n---\n\n\nI'm pleased to announce that `fitzRoy` v1.3.0 has just been accepted to CRAN!\n\nThis update mostly contains bug fixes. You can read about them below.\n\n### Deprecated functions\n\nAll of the `get_` family of functions are now formally following the deprecation lifecycle used in the [{lifecycle} package](https://lifecycle.r-lib.org/articles/stages.html). That is, there is now a formal warning for using these functions. The next version of `fitzRoy` will hard deprecate these functions, where calling them will return an error. Given these have been technically deprecated since v1.0.0, this is plenty of warning.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_7294a968cc0461b1d418c1c9fe826b74'}\n\n```{.r .cell-code}\n# install.packages(\"fitzRoy\")\nlibrary(fitzRoy)\n\nfitzRoy:::get_fixture(2020)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `get_fixture()` was deprecated in fitzRoy 1.0.0.\nℹ Please use `fetch_fixture()` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 162 × 7\n   Date                Season Season.Game Round Home.Team       Away.Team  Venue\n   <dttm>               <dbl>       <int> <dbl> <chr>           <chr>      <chr>\n 1 2020-03-19 19:40:00   2020           1     1 Richmond        Carlton    M.C.…\n 2 2020-03-20 19:50:00   2020           2     1 Footscray       Collingwo… Dock…\n 3 2020-03-21 14:10:00   2020           3     1 Essendon        Fremantle  Dock…\n 4 2020-03-21 16:35:00   2020           4     1 Adelaide        Sydney     Adel…\n 5 2020-03-21 18:40:00   2020           5     1 Gold Coast      Port Adel… Carr…\n 6 2020-03-21 19:40:00   2020           6     1 GWS             Geelong    Sydn…\n 7 2020-03-22 13:05:00   2020           7     1 North Melbourne St Kilda   Dock…\n 8 2020-03-22 15:35:00   2020           8     1 Hawthorn        Brisbane … M.C.…\n 9 2020-03-22 15:40:00   2020           9     1 West Coast      Melbourne  Pert…\n10 2020-06-11 19:40:00   2020          10     2 Collingwood     Richmond   M.C.…\n# … with 152 more rows\n```\n:::\n:::\n\n\n### `fetch_player_stats_afl`\n\nFixed an issue with `fetch_player_stats_afl` where an error was being returned for the new season. It now returns NULL if there is no data for the specified season\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_97e8394835b039b44a96fa73740a271b'}\n\n```{.r .cell-code}\nfetch_player_stats_afl(2023, round_number = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Fetching match ids\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Fetching match ids ... done\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Finding player stats for 9 matches.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Finding player stats for 9 matches. ... done\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ No completed matches found\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\n### Debut players in `fetch_player_stats_afltables`\n\nFixed an annoying bug where players who debuted in 2023 were getting assigned an ID of 0 in AFL Tables Data. This is now resolved and all ID's should be correctly assigned for new players\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_594c9765e7aa91c3b22ce9f8c166db4c'}\n\n```{.r .cell-code}\ndf <- fetch_player_stats_afltables(2022)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Looking for data from 2022-01-01 to 2022-12-31\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ fetching cached data from <\u001b]8;;github.com\u0007github.com\u001b]8;;\u0007>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ fetching cached data from <\u001b]8;;github.com\u0007github.com\u001b]8;;\u0007> ... done\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFinished getting afltables data\n```\n:::\n\n```{.r .cell-code}\ndf |> \n  dplyr::filter(ID == 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 59\n# … with 59 variables: Season <dbl>, Round <chr>, Date <date>,\n#   Local.start.time <int>, Venue <chr>, Attendance <dbl>, Home.team <chr>,\n#   HQ1G <int>, HQ1B <int>, HQ2G <int>, HQ2B <int>, HQ3G <int>, HQ3B <int>,\n#   HQ4G <int>, HQ4B <int>, Home.score <int>, Away.team <chr>, AQ1G <int>,\n#   AQ1B <int>, AQ2G <int>, AQ2B <int>, AQ3G <int>, AQ3B <int>, AQ4G <int>,\n#   AQ4B <int>, Away.score <int>, First.name <chr>, Surname <chr>, ID <dbl>,\n#   Jumper.No. <chr>, Playing.for <chr>, Kicks <dbl>, Marks <dbl>, …\n```\n:::\n:::\n\n\n### Smaller Bug Fixes\n\n-   Fixed a range of unhelpful messages and warnings\n\n-   Fixed a bug in `fetch_player_stats_footywire` that was caused by an update to the website\n\nEnjoy!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}