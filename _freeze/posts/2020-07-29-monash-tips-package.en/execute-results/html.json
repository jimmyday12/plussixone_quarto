{
  "hash": "8c2af92c3bf452f66dcb0dc43391d442",
  "result": {
    "markdown": "---\ntitle: \"Monash Tips Package\"\ndescription: \"New package for tipping in Monash Footy Tips competition\"\nauthor: James Day\ndate: '2020-07-29'\ncategories:\n  - AFLM\n  - Prediction\ndraft: true\nexecute: \n  eval: false\n---\n\n\nHey team! With the amazingness that is the 'festival of footy' and 20 days straight of games - spare a thought for us poor modellers as we scramble to update our tips and blogs between rounds that have no distinct gap!\n\nI'm working on a few things in `fitzRoy` that might help but thought I'd share something that I've been working on. Orginally it was just going to be some internal code that allowed me to submit my [Monash Probabilistic Tipping Comp](http://probabilistic-footy.monash.edu/~footy/index.shtml) tips from R when I updated my models.\n\nI figured that it could be useful for others in that comp. I understand that the venn diagram of people who enter tips into that comp AND use R AND want to save 5 minutes of manual clicking is very small. But I like playing around with R. So here we are!\n\nI've created the `monashtipr` package. It is a simple package that provides an API for submitting your tips through R! You can view the [pkgdown site](https://jimmyday12.github.io/monash_tipr/) for all the info but thought I'd walk through submitting my tips for the week.\n\n# Overview\n\nThere are basically two main functions. `get_games` will return a data frame of the games for a particular round and `submit_tips` will let you submit tips for a particular round and competition!\n\n## Submitting tips\n\nSee the steps below for how to use it in real life (this is from my own tips for Round 9).\n\n------------------------------------------------------------------------\n\n**NOTE**\n\nPlease be careful with this. While I've tried to test it, there is the chance to screw with your tips. I recommend checking things manually while this is still new and not stable.\n\n------------------------------------------------------------------------\n\n#### Step 1 - install the package!\n\nYou can get it from github. You'll need `devtools` if you don't already have it.\n\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/install_2697b6a1a5e6f8eab92ab53322820bdd'}\n\n```{.r .cell-code}\n# install.packages(\"devtools\")\ndevtools::install_github(\"jimmyday12/monash_tipr\")\n```\n:::\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/library_ae162f7a09615b1e5a4fa1ce83320277'}\n\n```{.r .cell-code}\nlibrary(monashtipr)\nlibrary(tidyverse)\n```\n:::\n\n\n#### Step 2 - do your predictions\n\nI'm not going to step through how I do these but ultimately I end up with something like below.\n\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/get_preds_db03d274be2b83f2661048b7cd375c48'}\n\n```{.r .cell-code}\npredictions <- read_csv(here::here(\"data_files\", \"raw-data\", \"predictions.csv\"))\n\npredictions\n```\n:::\n\n\n#### Step 3 - get this weeks games\n\nThe first function in `monashtipr` that is useful is `get_games`. This returns a dataframe of the weeks games based on the round you supply. If you don't supply a round, it will return the earliest available round for tipping.\n\nNote you can supply your username and password as plain text but I'm storing then in my `.Renviron` file. Read more about that here.\n\nThe comp needs to be one of \"normal\", \"gauss\" or \"info\" (info is the probability comp).\n\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/get tips_a926c9e330a504f27e259ec457669691'}\n\n```{.r .cell-code}\nuser <- Sys.getenv(\"MONASH_USER\")\npass =  Sys.getenv(\"MONASH_PASS\")\nmonash_games <- get_games(user, pass, comp = \"normal\")\nmonash_games\n```\n:::\n\n\n#### Step 4 - Join predictions to monash games\n\nI now need to add my predictions to the data frame of monash tips. Because my teams don't really match up, I've written a quick and dirty function to replace these.\n\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/join_c1396bf2776fd56c3140abc73361c42e'}\n\n```{.r .cell-code}\n# Function to replace team names\nmap_names_to_monash <- function(names) {\n  dplyr::case_when(\n    names == \"Footscray\" ~ \"W_Bulldogs\",\n    names == \"North Melbourne\" ~ \"Kangaroos\",\n    names == \"St Kilda\" ~ \"St_Kilda\",\n    names == \"West Coast\" ~ \"W_Coast\",\n    names == \"Gold Coast\" ~ \"Gold_Coast\",\n    names == \"Port Adelaide\" ~ \"P_Adelaide\",\n    names == \"Brisbane Lions\" ~ \"Brisbane\",\n    names == \"GWS\" ~ \"G_W_Sydney\", \n    TRUE ~ names\n  )\n}\n\npredictions <- predictions %>%\n  filter(Round.Number == min(Round.Number)) %>%\n  mutate_at(c(\"Home.Team\", \"Away.Team\"), map_names_to_monash) %>%\n  mutate(Margin = round(Prediction),\n         `Std. Dev.` = 40) %>%\n  rename(Home = Home.Team, \n         Away = Away.Team) %>%\n  select(Home, Away, Margin, `Std. Dev.`, Probability)\n\npredictions_joined <- monash_games %>%\n  select(-Margin) %>%\n  left_join(predictions, by = c(\"Home\", \"Away\"))\n\npredictions_joined\n```\n:::\n\n\n#### Step 5 - Submit tips!\n\nNow we've done that, we can submit our tips using `submit_tips`. This function expects a data frame in the same format as the one returned by `get_games` which is why I did the steps of renaming teams and joining my tips to that data frame.\n\n\n::: {.cell hash='2020-07-29-monash-tips-package.en_cache/html/submit_b6abf61ecf56c1c29237497ddec10ea1'}\n\n```{.r .cell-code}\n# Submit - normal\npredictions_joined %>%\n  select(-`Std. Dev.`, -Probability) %>%\n  monashtipr::submit_tips(user = user, pass = pass, comp = \"normal\")\n\n# Submit - gauss\npredictions_joined %>%\n  select(-Probability) %>%\n  monashtipr::submit_tips(user = user, pass = pass, comp = \"gauss\")\n\n# Submit - prob\npredictions_joined %>%\n  select(-`Std. Dev.`, -Margin) %>%\n  monashtipr::submit_tips(user = user, pass = pass, comp = \"info\")\n```\n:::\n\n\nThat's about it. Hopefully some people get some use out it. Let me know if it works or you run into issues.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}